@page "/worry"
@rendermode InteractiveAuto
@using WorryBlazor.Client.Models
@using WorryBlazor.Client.Services
@implements IDisposable
@inject PersistentComponentState ApplicationState
@inject IWorryService WorryService

<PageTitle>Counter</PageTitle>

<h1>About</h1>

<p role="status">Current count: @currentCount</p>

<button class="btn btn-primary" @onclick="IncrementCount">Click me</button>

<br />
<p>Use this page to test the WorryClient component.</p>

@code {
    private int currentCount = 0;
    private Worry[]? worries;
    private PersistingComponentStateSubscription persistingSubscription;

    private void IncrementCount()
    {
        currentCount++;
    }

    protected override async Task OnInitializedAsync()
    {
        persistingSubscription = ApplicationState.RegisterOnPersisting(PersistData);
        // worries = await WorryService.GetWorriesAsync();
        await GetWorries();

    }

    private async Task GetWorries()
    {
        worries = await WorryService.GetWorriesAsync() ?? Array.Empty<Worry>();
        Console.WriteLine(worries);
    }

    private Task PersistData()
    {
        ApplicationState.PersistAsJson(nameof(worries), worries);

        return Task.CompletedTask;
    }

    // public class ClientWorryService(HttpClient http) : IWorryService
    // {
    //     public async Task<Worry[]> GetWorriesAsync()
    //     {
    //         var response = await http.GetFromJsonAsync<Worry[]>("Worry") ?? [];
    //         Console.WriteLine(response);
    //         return await http.GetFromJsonAsync<Worry[]>("Worry") ?? [];
    //     }
    // }
    void IDisposable.Dispose() => persistingSubscription.Dispose();
}